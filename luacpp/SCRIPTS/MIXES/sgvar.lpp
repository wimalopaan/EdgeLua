---
-- EdgeLUA - EdgeTx / OpenTx Extensions 
-- Copyright (C) 2021 Wilhelm Meier <wilhelm.wm.meier@googlemail.com>
--
-- This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. 
-- To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/4.0/ 
-- or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.

-- IMPORTANT
-- Please note that the above license also covers the transfer protocol used and the encoding scheme and 
-- all further principals of tranferring state and other information.

#include "../../global.h"

local output = { 
   "sw_var",
   #ifdef DEBUG
   "transp",
   "raw"
   #endif 
};

#ifndef USE_SHM

local errorCode = 0;
local gvar = 0;
local function initGV()
   if not(__WmSw2Config) then
      local basedir = BASE_DIR .. "/LIB/";
      if not __libI then
        __libI = loadScript(basedir .. "libI.lua")();
        if not __libI then
          errorCode = 1;
        else   
         local config = __libI.loadConfig();
         if not(config) then
            errorCode = 4;
            return;
         end
         __WmSw2Config = __libI.initConfig(config);
         collectgarbage();
        end
      end
   end
   gvar = __WmSw2Config[CFG_MixerGlobalVariable];
end

 #endif

if (LCD_W <= 212) then
   GLOBAL_LUA_MIX_VAR = 0;
end

local function transportGlobalLua()
   return GLOBAL_LUA_MIX_VAR
   #ifdef DEBUG
   , 0, 0
   #endif 
   ;
end

local function transportGV()
   return model.getGlobalVariable(gvar, 0)
   #ifdef DEBUG
   , 1, model.getGlobalVariable((gvar + 1), 0)
   #endif 
   ;
end

local function transportShm()
   return getShmVar(SHM_VAR)
   #ifdef DEBUG
   , 2, 0
   #endif
   ;
end

if (LCD_W <= 212) then
   TRACE("sgvar: use transportGlobalLua");
   return {
      output = output,
      run = transportGlobalLua
   };
else
   #ifdef USE_SHM
   if (getShmVar) then
      TRACE("sgvar: use transportShm");
      return {
         output = output,
         run = transportShm
      };
   else
      TRACE("sgvar: use transportGV");
      return {
         init = initGV,
         output = output,
         run = transportGV
      };
   end
   #else
   TRACE("sgvar: use transportGV");
   return {
      init = initGV,
      output = output,
      run = transportGV
   };
   #endif
end
